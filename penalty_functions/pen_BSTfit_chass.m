function BST_penalty = pen_BSTfit_chass(nT,absolute_concMatrix,Vcalc)
% Calculate penalty for fitting BST equation to metabolite and flux data.

% Set up linear equations
Av2 = [ones(nT,1), log(absolute_concMatrix(1:nT,1)), log(absolute_concMatrix(1:nT,2)), log(absolute_concMatrix(1:nT,10)), log(absolute_concMatrix(1:nT,11))];
Av3 = [ones(nT,1), log(absolute_concMatrix(1:nT,2)), log(absolute_concMatrix(1:nT,3)), log(absolute_concMatrix(1:nT,12))];
Av4 = [ones(nT,1), log(absolute_concMatrix(1:nT,2)), log(absolute_concMatrix(1:nT,18))];
Av5 = [ones(nT,1), log(absolute_concMatrix(1:nT,2))];
Av6 = [ones(nT,1), log(absolute_concMatrix(1:nT,3)), log(absolute_concMatrix(1:nT,10))];
Av7 = [ones(nT,1), log(absolute_concMatrix(1:nT,3)), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,15)), log(absolute_concMatrix(1:nT,17))];
Av8 = [ones(nT,1), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,14)), log(absolute_concMatrix(1:nT,15)), log(absolute_concMatrix(1:nT,16))];
Av9 = [ones(nT,1), log(absolute_concMatrix(1:nT,3)), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,14)), log(absolute_concMatrix(1:nT,17))];
%Av10 = [ones(nT,1), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,11))];
Av11 = [ones(nT,1), log(absolute_concMatrix(1:nT,4)), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,6))];
Av12 = [ones(nT,1), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,7))];
Av13 = [ones(nT,1), log(absolute_concMatrix(1:nT,5)), log(absolute_concMatrix(1:nT,6))];
%Av14 = [ones(nT,1), log(absolute_concMatrix(1:nT,15))];
Av15 = [ones(nT,1), log(absolute_concMatrix(1:nT,6))];
Av16 = [ones(nT,1), log(absolute_concMatrix(1:nT,7)), log(absolute_concMatrix(1:nT,8))];
Av17 = [ones(nT,1), log(absolute_concMatrix(1:nT,8))];
Av18 = [ones(nT,1), log(absolute_concMatrix(1:nT,8)), log(absolute_concMatrix(1:nT,9))];
Av19 = [ones(nT,1), log(absolute_concMatrix(1:nT,9)), log(absolute_concMatrix(1:nT,10))];
Av20 = [ones(nT,1), log(absolute_concMatrix(1:nT,4)), log(absolute_concMatrix(1:nT,10))];
Av21 = [ones(nT,1), log(absolute_concMatrix(1:nT,4)), log(absolute_concMatrix(1:nT,10))];
Av22 = [ones(nT,1), log(absolute_concMatrix(1:nT,10))];
Av23= [ones(nT,1), log(absolute_concMatrix(1:nT,11))];
Av24 = [ones(nT,1), log(absolute_concMatrix(1:nT,10)), log(absolute_concMatrix(1:nT,17))];
Av25 = [ones(nT,1), log(absolute_concMatrix(1:nT,11))];
%Av26 = [ones(nT,1), log(absolute_concMatrix(1:nT,10))];
Av27 = [ones(nT,1), log(absolute_concMatrix(1:nT,12))];
Av28 = [ones(nT,1), log(absolute_concMatrix(1:nT,13)), log(absolute_concMatrix(1:nT,16))];
Av29 = [ones(nT,1), log(absolute_concMatrix(1:nT,13)), log(absolute_concMatrix(1:nT,14))];
Av30 = [ones(nT,1), log(absolute_concMatrix(1:nT,16))];
Av31 = [ones(nT,1), log(absolute_concMatrix(1:nT,4)), log(absolute_concMatrix(1:nT,18))];
Av32 = [ones(nT,1), log(absolute_concMatrix(1:nT,2))];
Av33 = [ones(nT,1), log(absolute_concMatrix(1:nT,3))];
Av34 = [ones(nT,1), log(absolute_concMatrix(1:nT,4))];
Av35 = [ones(nT,1), log(absolute_concMatrix(1:nT,5))];
Av36 = [ones(nT,1), log(absolute_concMatrix(1:nT,6))];
Av37 = [ones(nT,1), log(absolute_concMatrix(1:nT,7))];
Av38 = [ones(nT,1), log(absolute_concMatrix(1:nT,8))];
Av39 = [ones(nT,1), log(absolute_concMatrix(1:nT,9))];
Av40 = [ones(nT,1), log(absolute_concMatrix(1:nT,10))];
Av41 = [ones(nT,1), log(absolute_concMatrix(1:nT,11))];
Av42 = [ones(nT,1), log(absolute_concMatrix(1:nT,12))];
Av43 = [ones(nT,1), log(absolute_concMatrix(1:nT,13))];
Av44 = [ones(nT,1), log(absolute_concMatrix(1:nT,14))];
Av45 = [ones(nT,1), log(absolute_concMatrix(1:nT,15))];
Av46 = [ones(nT,1), log(absolute_concMatrix(1:nT,16))];
Av47 = [ones(nT,1), log(absolute_concMatrix(1:nT,17))];
Av48 = [ones(nT,1), log(absolute_concMatrix(1:nT,18))];
A = blkdiag(Av2, Av3, Av4, Av5, Av6, Av7, Av8, Av9, Av11, Av12, Av13, Av15, Av16, Av17, Av18, Av19, Av20, Av21, Av22, Av23,...
    Av24, Av25, Av27, Av28, Av29, Av30, Av31, Av32, Av33, Av34, Av35, Av36, Av37, Av38, Av39, Av40, Av41, Av42, Av43, Av44, Av45, Av46, Av47, Av48);
b = reshape(log(Vcalc(:,[2:9 11:13 15:25 27:48])),[numel(Vcalc(:,[2:9 11:13 15:25 27:48])),1]);

% Solve for linearized best fit
x = A\b;

% Switch a terms out of log-space
x([1 6 10 13 15 18 23 28 33 37 40 43 45 48 50 53 56 59 62 64 66 69 71 73 76 79 81 84 86 88 90 92 94 96 98 100 102 104 106 108 110 112 114 116]) = exp(x([1 6 10 13 15 18 23 28 33 37 40 43 45 48 50 53 56 59 62 64 66 69 71 73 76 79 81 84 86 88 90 92 94 96 98 100 102 104 106 108 110 112 114 116]));

% Calculate predicted BST flux
BST_flux(:,1) = x(1).*absolute_concMatrix(1:nT,1).^x(2).*absolute_concMatrix(1:nT,2).^x(3).*absolute_concMatrix(1:nT,10).^x(4).*absolute_concMatrix(1:nT,11).^x(5);
BST_flux(:,2) = x(6).*absolute_concMatrix(1:nT,2).^x(7).*absolute_concMatrix(1:nT,3).^x(8).*absolute_concMatrix(1:nT,12).^x(9);
BST_flux(:,3) = x(10).*absolute_concMatrix(1:nT,2).^x(11).*absolute_concMatrix(1:nT,18).^x(12);
BST_flux(:,4) = x(13).*absolute_concMatrix(1:nT,2).^x(14);
BST_flux(:,5) = x(15).*absolute_concMatrix(1:nT,3).^x(16).*absolute_concMatrix(1:nT,17);
BST_flux(:,6) = x(18).*absolute_concMatrix(1:nT,3).^x(19).*absolute_concMatrix(1:nT,5).^x(20).*absolute_concMatrix(1:nT,15).^x(21).*absolute_concMatrix(1:nT,17).^x(22);
BST_flux(:,7) = x(23).*absolute_concMatrix(1:nT,5).^x(24).*absolute_concMatrix(1:nT,14).^x(25).*absolute_concMatrix(1:nT,15).^x(26).*absolute_concMatrix(1:nT,16).^x(27);
BST_flux(:,8) = x(28).*absolute_concMatrix(1:nT,3).^x(29).*absolute_concMatrix(1:nT,5).^x(30).*absolute_concMatrix(1:nT,14).^x(31).*absolute_concMatrix(1:nT,17).^x(32);
BST_flux(:,9) = x(33).*absolute_concMatrix(1:nT,4).^x(34).*absolute_concMatrix(1:nT,5).^x(35).*absolute_concMatrix(1:nT,6).^x(36);
BST_flux(:,10) = x(37).*absolute_concMatrix(1:nT,5).^x(38).*absolute_concMatrix(1:nT,7).^x(39);
BST_flux(:,11) = x(40).*absolute_concMatrix(1:nT,5).^x(41).*absolute_concMatrix(1:nT,6).^x(42);
BST_flux(:,12) = x(43).*absolute_concMatrix(1:nT,6).^x(44);
BST_flux(:,13) = x(45).*absolute_concMatrix(1:nT,7).^x(46).*absolute_concMatrix(1:nT,8).^x(47);
BST_flux(:,14) = x(48).*absolute_concMatrix(1:nT,8).^x(49);
BST_flux(:,15) = x(50).*absolute_concMatrix(1:nT,8).^x(51).*absolute_concMatrix(1:nT,9).^x(52);
BST_flux(:,16) = x(53).*absolute_concMatrix(1:nT,9).^x(54).*absolute_concMatrix(1:nT,10).^x(55);
BST_flux(:,17) = x(56).*absolute_concMatrix(1:nT,4).^x(57).*absolute_concMatrix(1:nT,10).^x(58);
BST_flux(:,18) = x(59).*absolute_concMatrix(1:nT,4).^x(60).*absolute_concMatrix(1:nT,10).^x(61);
BST_flux(:,19) = x(62).*absolute_concMatrix(1:nT,10).^x(63);
BST_flux(:,20) = x(64).*absolute_concMatrix(1:nT,11).^x(65);
BST_flux(:,21) = x(66).*absolute_concMatrix(1:nT,10).^x(67).*absolute_concMatrix(1:nT,17).^x(68);
BST_flux(:,22) = x(69).*absolute_concMatrix(1:nT,11).^x(70);
BST_flux(:,23) = x(71).*absolute_concMatrix(1:nT,12).^x(72);
BST_flux(:,24) = x(73).*absolute_concMatrix(1:nT,13).^x(74).*absolute_concMatrix(1:nT,16).^x(75);
BST_flux(:,25) = x(76).*absolute_concMatrix(1:nT,13).^x(77).*absolute_concMatrix(1:nT,14).^x(78);
BST_flux(:,26) = x(79).*absolute_concMatrix(1:nT,16).^x(80);
BST_flux(:,27) = x(81).*absolute_concMatrix(1:nT,4).^x(82).*absolute_concMatrix(1:nT,18).^x(83);
BST_flux(:,28) = x(84).*absolute_concMatrix(1:nT,2).^x(85);
BST_flux(:,29) = x(86).*absolute_concMatrix(1:nT,3).^x(87);
BST_flux(:,30) = x(88).*absolute_concMatrix(1:nT,4).^x(89);
BST_flux(:,31) = x(90).*absolute_concMatrix(1:nT,5).^x(91);
BST_flux(:,32) = x(92).*absolute_concMatrix(1:nT,6).^x(93);
BST_flux(:,33) = x(94).*absolute_concMatrix(1:nT,7).^x(95);
BST_flux(:,34) = x(96).*absolute_concMatrix(1:nT,8).^x(97);
BST_flux(:,35) = x(98).*absolute_concMatrix(1:nT,9).^x(99);
BST_flux(:,36) = x(100).*absolute_concMatrix(1:nT,10).^x(101);
BST_flux(:,37) = x(102).*absolute_concMatrix(1:nT,11).^x(103);
BST_flux(:,38) = x(104).*absolute_concMatrix(1:nT,12).^x(105);
BST_flux(:,39) = x(106).*absolute_concMatrix(1:nT,13).^x(107);
BST_flux(:,40) = x(108).*absolute_concMatrix(1:nT,14).^x(109);
BST_flux(:,41) = x(110).*absolute_concMatrix(1:nT,15).^x(111);
BST_flux(:,42) = x(112).*absolute_concMatrix(1:nT,16).^x(113);
BST_flux(:,43) = x(114).*absolute_concMatrix(1:nT,17).^x(115);
BST_flux(:,44) = x(116).*absolute_concMatrix(1:nT,18).^x(117);

% Calculate error between predicted flux using BST and inferred flux
BST_error(1) = real(sqrt(sum(sum((Vcalc(1:nT,2) - BST_flux(:,1)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,2) - BST_flux(:,1)).^2)))));
BST_error(2) = real(sqrt(sum(sum((Vcalc(1:nT,3) - BST_flux(:,2)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,3) - BST_flux(:,2)).^2)))));
BST_error(3) = real(sqrt(sum(sum((Vcalc(1:nT,4) - BST_flux(:,3)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,4) - BST_flux(:,3)).^2)))));
BST_error(4) = real(sqrt(sum(sum((Vcalc(1:nT,5) - BST_flux(:,4)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,5) - BST_flux(:,4)).^2)))));
BST_error(5) = real(sqrt(sum(sum((Vcalc(1:nT,6) - BST_flux(:,5)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,6) - BST_flux(:,5)).^2)))));
BST_error(6) = real(sqrt(sum(sum((Vcalc(1:nT,7) - BST_flux(:,6)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,7) - BST_flux(:,6)).^2)))));
BST_error(7) = real(sqrt(sum(sum((Vcalc(1:nT,8) - BST_flux(:,7)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,8) - BST_flux(:,7)).^2)))));
BST_error(8) = real(sqrt(sum(sum((Vcalc(1:nT,9) - BST_flux(:,8)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,9) - BST_flux(:,8)).^2)))));
BST_error(9) = real(sqrt(sum(sum((Vcalc(1:nT,11) - BST_flux(:,9)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,11) - BST_flux(:,9)).^2)))));
BST_error(10) = real(sqrt(sum(sum((Vcalc(1:nT,12) - BST_flux(:,10)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,12) - BST_flux(:,10)).^2)))));
BST_error(11) = real(sqrt(sum(sum((Vcalc(1:nT,13) - BST_flux(:,11)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,13) - BST_flux(:,11)).^2)))));
BST_error(12) = real(sqrt(sum(sum((Vcalc(1:nT,15) - BST_flux(:,12)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,15) - BST_flux(:,12)).^2)))));
BST_error(13) = real(sqrt(sum(sum((Vcalc(1:nT,16) - BST_flux(:,13)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,16) - BST_flux(:,13)).^2)))));
BST_error(14) = real(sqrt(sum(sum((Vcalc(1:nT,17) - BST_flux(:,14)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,17) - BST_flux(:,14)).^2)))));
BST_error(15) = real(sqrt(sum(sum((Vcalc(1:nT,18) - BST_flux(:,15)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,18) - BST_flux(:,15)).^2)))));
BST_error(16) = real(sqrt(sum(sum((Vcalc(1:nT,19) - BST_flux(:,16)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,19) - BST_flux(:,16)).^2)))));
BST_error(17) = real(sqrt(sum(sum((Vcalc(1:nT,20) - BST_flux(:,17)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,20) - BST_flux(:,17)).^2)))));
BST_error(18) = real(sqrt(sum(sum((Vcalc(1:nT,21) - BST_flux(:,18)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,21) - BST_flux(:,18)).^2)))));
BST_error(19) = real(sqrt(sum(sum((Vcalc(1:nT,22) - BST_flux(:,19)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,22) - BST_flux(:,19)).^2)))));
BST_error(20) = real(sqrt(sum(sum((Vcalc(1:nT,23) - BST_flux(:,20)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,23) - BST_flux(:,20)).^2)))));
BST_error(21) = real(sqrt(sum(sum((Vcalc(1:nT,24) - BST_flux(:,21)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,24) - BST_flux(:,21)).^2)))));
BST_error(22) = real(sqrt(sum(sum((Vcalc(1:nT,25) - BST_flux(:,22)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,25) - BST_flux(:,22)).^2)))));
BST_error(23) = real(sqrt(sum(sum((Vcalc(1:nT,27) - BST_flux(:,23)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,27) - BST_flux(:,23)).^2)))));
BST_error(24) = real(sqrt(sum(sum((Vcalc(1:nT,28) - BST_flux(:,24)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,28) - BST_flux(:,24)).^2)))));
BST_error(25) = real(sqrt(sum(sum((Vcalc(1:nT,29) - BST_flux(:,25)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,29) - BST_flux(:,25)).^2)))));
BST_error(26) = real(sqrt(sum(sum((Vcalc(1:nT,30) - BST_flux(:,26)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,30) - BST_flux(:,26)).^2)))));
BST_error(27) = real(sqrt(sum(sum((Vcalc(1:nT,31) - BST_flux(:,27)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,31) - BST_flux(:,27)).^2)))));
BST_error(28) = real(sqrt(sum(sum((Vcalc(1:nT,32) - BST_flux(:,28)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,32) - BST_flux(:,28)).^2)))));
BST_error(29) = real(sqrt(sum(sum((Vcalc(1:nT,33) - BST_flux(:,29)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,33) - BST_flux(:,29)).^2)))));
BST_error(30) = real(sqrt(sum(sum((Vcalc(1:nT,34) - BST_flux(:,30)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,34) - BST_flux(:,30)).^2)))));
BST_error(31) = real(sqrt(sum(sum((Vcalc(1:nT,35) - BST_flux(:,31)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,35) - BST_flux(:,31)).^2)))));
BST_error(32) = real(sqrt(sum(sum((Vcalc(1:nT,36) - BST_flux(:,32)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,36) - BST_flux(:,32)).^2)))));
BST_error(33) = real(sqrt(sum(sum((Vcalc(1:nT,37) - BST_flux(:,33)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,37) - BST_flux(:,33)).^2)))));
BST_error(34) = real(sqrt(sum(sum((Vcalc(1:nT,38) - BST_flux(:,34)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,38) - BST_flux(:,34)).^2)))));
BST_error(35) = real(sqrt(sum(sum((Vcalc(1:nT,39) - BST_flux(:,35)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,39) - BST_flux(:,35)).^2)))));
BST_error(36) = real(sqrt(sum(sum((Vcalc(1:nT,40) - BST_flux(:,36)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,40) - BST_flux(:,36)).^2)))));
BST_error(37) = real(sqrt(sum(sum((Vcalc(1:nT,41) - BST_flux(:,37)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,41) - BST_flux(:,37)).^2)))));
BST_error(38) = real(sqrt(sum(sum((Vcalc(1:nT,42) - BST_flux(:,38)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,42) - BST_flux(:,38)).^2)))));
BST_error(39) = real(sqrt(sum(sum((Vcalc(1:nT,43) - BST_flux(:,39)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,43) - BST_flux(:,39)).^2)))));
BST_error(40) = real(sqrt(sum(sum((Vcalc(1:nT,44) - BST_flux(:,40)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,44) - BST_flux(:,40)).^2)))));
BST_error(41) = real(sqrt(sum(sum((Vcalc(1:nT,45) - BST_flux(:,41)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,45) - BST_flux(:,41)).^2)))));
BST_error(42) = real(sqrt(sum(sum((Vcalc(1:nT,46) - BST_flux(:,42)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,46) - BST_flux(:,42)).^2)))));
BST_error(43) = real(sqrt(sum(sum((Vcalc(1:nT,47) - BST_flux(:,43)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,47) - BST_flux(:,43)).^2)))));
BST_error(44) = real(sqrt(sum(sum((Vcalc(1:nT,48) - BST_flux(:,44)).^2)))) + abs(imag(sqrt(sum(sum((Vcalc(1:nT,48) - BST_flux(:,44)).^2)))));

BST_penalty = nansum(BST_error);